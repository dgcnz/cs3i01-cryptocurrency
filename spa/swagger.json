{
    "swagger": "2.0",
    "info": {
        "description": "Visualize the blockchain by accessing <a href='/' target='_blank'>here</a>.",
        "version": "0.0.1",
        "title": "Toficoin API"
    },
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/latest-block": {
            "get": {
                "tags": [
                    "miner_node"
                ],
                "summary": "Get latest block.",
                "description": "",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "block": {
                                    "$ref": "#/definitions/Block"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/balance": {
            "get": {
                "tags": [
                    "miner_node"
                ],
                "summary": "Get balance of given address.",
                "description": "",
                "parameters": [
                    {
                    "in": "path",
                    "name": "address",
                    "description": "The public key from which the balance will be computed.",
                    "required": true,
                    "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "balance": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/difficulty": {
            "get": {
                "tags": [
                    "miner_node"
                ],
                "summary": "Get difficulty of local blockchain.",
                "description": "",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "difficulty": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/blockchain": {
            "get": {
                "tags": [
                    "miner_node"
                ],
                "summary": "Get all blocks.",
                "description": "",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "blockchain": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Block"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "miner_node"
                ],
                "summary": "Attempt to replace blockchain with given blockchain.",
                "description": "",
                "parameters": [
                    {
                    "in": "body",
                    "name": "blockchain",
                    "description": "The blockchain that will replace the local one.",
                    "required": true,
                    "schema":{
                        "type": "object",
                        "properties": {
                            "blockchain": {
                                "type": "array",
                                "items": {
                                    "$ref" : "#/definitions/Block"
                                }
                            }
                        }

                    }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/find-utxos": {
            "get": {
                "tags": [
                    "miner_node"
                ],
                "summary": "Find enought unspent transaction outputs for a given amount and address.",
                "description": "",
                "parameters": [
                    {
                    "in": "path",
                    "name": "address",
                    "description": "The public key from which the unspent transaction outputs will be searched.",
                    "required": true,
                    "type": "string"
                    },
                    {
                    "in": "path",
                    "name": "amount",
                    "description": "The lower bound on the amount of coins the transaction outputs must sum.",
                    "required": true,
                    "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "utxos": {
                                    "type": "array",
                                    "items": {
                                        "$ref" : "#/definitions/UnspentTransactionOutput"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/transaction-pool": {
            "get": {
                "tags": [
                    "miner_node"
                ],
                "summary": "Get unconfirmed transactions.",
                "description": "",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "txpool": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Transaction"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "miner_node"
                ],
                "summary": "Add new unconfirmed transaction.",
                "description": "",
                "parameters": [
                    {
                    "in": "body",
                    "name": "transaction",
                    "description": "The transaction to include in the pool.",
                    "required": true,
                    "schema":{
                        "type": "object",
                        "properties": {
                            "transaction": {
                                "$ref" : "#/definitions/Transaction"
                            }
                        }

                    }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/mine": {
            "post": {
                "tags": [
                    "miner_node"
                ],
                "summary": "Mine transactions from local transaction pool.",
                "description": "",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "420": {
                        "description": "Error: NotEnoughTransactions or UnacceptedBroadcast"
                    }
                }
            }
        },
        "/api/transaction": {
            "post": {
                "tags": [
                    "wallet_node"
                ],
                "summary": "Broadcast transaction to peer's transaction pools.",
                "description": "",
                "parameters": [
                    {
                    "in": "body",
                    "name": "Transaction data",
                    "description": "The data necessary to perform the transaction.",
                    "required": true,
                    "schema":{
                        "type": "object",
                        "properties": {
                            "address": {
                                "description": "Public Key of recipient.",
                                "type": "string"
                            },
                            "amount": {
                                "description": "Amount of coins to be transferred.",
                                "type": "integer"
                            },
                            "keyname": {
                                "description": "Keyname where to collect funds.",
                                "type": "string"
                            }
                        }
                    }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "NotEnoughFunds"
                    },
                    "420": {
                        "description": "UnacceptedBroadcast"
                    }
                }
            }
        },
        "/api/keys": {
            "get": {
                "tags": [
                    "wallet_node"
                ],
                "summary": "Get keynames and public keys of saved keys.",
                "description": "",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "keynames": {
                                    "type": "array",
                                    "items": {
                                        "schema": {
                                            "type": "object",
                                            "properties":{
                                                "keyname" : {
                                                    "type":"string"
                                                },
                                                "address": {
                                                    "type":"string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "wallet_node"
                ],
                "summary": "Create new pair of keys.",
                "description": "",
                "parameters": [
                    {
                    "in": "body",
                    "name": "keyname",
                    "description": "The name of the keypair to create.",
                    "required": true,
                    "schema":{
                        "type": "object",
                        "properties": {
                            "keyname": {
                                "type": "string"
                            }
                        }

                    }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/balance": {
            "get": {
                "tags": [
                    "wallet_node"
                ],
                "summary": "Get balance of given address.",
                "description": "",
                "parameters": [
                    {
                    "in": "path",
                    "name": "address",
                    "description": "The public key from which the balance will be computed.",
                    "required": true,
                    "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "balance": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Block": {
            "type": "object",
            "properties": {
                "py/object": {
                    "type": "string",
                    "enum": ["lib.block.Block"]
                },
                "index": {
                    "type": "integer"
                },
                "bhash": {
                    "type": "string"
                },
                "prev_bhash": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Transaction"
                    }
                },
                "difficulty": {
                    "type": "integer"
                },
                "nonce": {
                    "type": "integer"
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "py/object": {
                    "type": "string",
                    "enum": ["lib.transaction.Transaction"]
                },
                "id": {
                    "type": "string"
                },
                "txins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransactionInput"
                    }
                },
                "txouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TransactionOutput"
                    }
                }
            }
        },
        "TransactionInput": {
            "type": "object",
            "properties": {
                "py/object": {
                    "type": "string",
                    "enum": ["lib.transaction.TxIn"]
                },
                "tx_id": {
                    "type": "string"
                },
                "txout_index": {
                    "type": "integer"
                }
            }
        },
        "TransactionOutput": {
            "type": "object",
            "properties": {
                "py/object": {
                    "type": "string",
                    "enum": ["lib.transaction.TxOut"]
                },
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                }
            }
        },
        "UnspentTransactionOutput": {
            "type": "object",
            "properties": {
                "py/object": {
                    "type": "string",
                    "enum": ["lib.utxoset.UTXO"]
                },
                "tx_id": {
                    "type": "string"
                },
                "txout_index": {
                    "type": "integer"
                },
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "integer"
                }
            }
        }
    }
}
